	component integrated_module1 is
		port (
			clk_clk                        : in    std_logic                     := 'X';             -- clk
			reset_reset_n                  : in    std_logic                     := 'X';             -- reset_n
			sdram_wire_addr                : out   std_logic_vector(11 downto 0);                    -- addr
			sdram_wire_ba                  : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_wire_cas_n               : out   std_logic;                                        -- cas_n
			sdram_wire_cke                 : out   std_logic;                                        -- cke
			sdram_wire_cs_n                : out   std_logic;                                        -- cs_n
			sdram_wire_dq                  : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_wire_dqm                 : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_wire_ras_n               : out   std_logic;                                        -- ras_n
			sdram_wire_we_n                : out   std_logic;                                        -- we_n
			sram_DQ                        : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DQ
			sram_ADDR                      : out   std_logic_vector(17 downto 0);                    -- ADDR
			sram_LB_N                      : out   std_logic;                                        -- LB_N
			sram_UB_N                      : out   std_logic;                                        -- UB_N
			sram_CE_N                      : out   std_logic;                                        -- CE_N
			sram_OE_N                      : out   std_logic;                                        -- OE_N
			sram_WE_N                      : out   std_logic;                                        -- WE_N
			vga_controller_CLK             : out   std_logic;                                        -- CLK
			vga_controller_HS              : out   std_logic;                                        -- HS
			vga_controller_VS              : out   std_logic;                                        -- VS
			vga_controller_BLANK           : out   std_logic;                                        -- BLANK
			vga_controller_SYNC            : out   std_logic;                                        -- SYNC
			vga_controller_R               : out   std_logic_vector(9 downto 0);                     -- R
			vga_controller_G               : out   std_logic_vector(9 downto 0);                     -- G
			vga_controller_B               : out   std_logic_vector(9 downto 0);                     -- B
			sdram_clk_clk                  : out   std_logic;                                        -- clk
			switches_export                : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- export
			leds_export                    : out   std_logic_vector(7 downto 0);                     -- export
			pushbuttons_export             : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			sd_card_ports_b_SD_cmd         : inout std_logic                     := 'X';             -- b_SD_cmd
			sd_card_ports_b_SD_dat         : inout std_logic                     := 'X';             -- b_SD_dat
			sd_card_ports_b_SD_dat3        : inout std_logic                     := 'X';             -- b_SD_dat3
			sd_card_ports_o_SD_clock       : out   std_logic;                                        -- o_SD_clock
			keyboard_CLK                   : inout std_logic                     := 'X';             -- CLK
			keyboard_DAT                   : inout std_logic                     := 'X';             -- DAT
			audio_0_external_ADCDAT        : in    std_logic                     := 'X';             -- ADCDAT
			audio_0_external_ADCLRCK       : in    std_logic                     := 'X';             -- ADCLRCK
			audio_0_external_BCLK          : in    std_logic                     := 'X';             -- BCLK
			audio_0_external_DACDAT        : out   std_logic;                                        -- DACDAT
			audio_0_external_DACLRCK       : in    std_logic                     := 'X';             -- DACLRCK
			audio_and_video_interface_SDAT : inout std_logic                     := 'X';             -- SDAT
			audio_and_video_interface_SCLK : out   std_logic;                                        -- SCLK
			clocks_audio_clk_clk           : out   std_logic;                                        -- clk
			clocks_clk_in_secondary_clk    : in    std_logic                     := 'X'              -- clk
		);
	end component integrated_module1;

